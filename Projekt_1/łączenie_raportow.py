# -*- coding: utf-8 -*-
"""łączenie_raportow.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1iTTjnstG3BcLZUv9ojTZetb9YUCdpwwm
"""

from google.colab import drive
import json

# Podłączenie do Google Drive
drive.mount('/content/drive')

# Ścieżki do plików na Google Drive
pracuj_report_path = '/content/drive/My Drive/Ekstrakcja_danych_projekt1/technology_report_pracuj.json'
justjoin_report_path = '/content/drive/My Drive/Ekstrakcja_danych_projekt1/technology_report_justjoin.json'


# Wczytanie raportów
with open(pracuj_report_path, "r") as pracuj_file:
    technology_report_pracuj = json.load(pracuj_file)

with open(justjoin_report_path, "r") as justjoin_file:
    technology_report_justjoin = json.load(justjoin_file)

# Połączenie raportów
merged_technology_report = {}

# Zliczenie programów
for technology, count in technology_report_pracuj.items():
    if isinstance(count, int):  # Sprawdzenie czy wartość jest liczbą całkowitą
        if technology in merged_technology_report:
            merged_technology_report[technology]['count'] += count
        else:
            merged_technology_report[technology] = {'count': count}

for technology, count in technology_report_justjoin.items():
    if isinstance(count, int):  # Sprawdzenie czy wartość jest liczbą całkowitą
        if technology in merged_technology_report:
            merged_technology_report[technology]['count'] += count
        else:
            merged_technology_report[technology] = {'count': count}

# Złączenie informacji o stanowiskach
for position in technology_report_pracuj.keys():
    if isinstance(technology_report_pracuj[position], dict) and position in technology_report_justjoin:
        min_salary = technology_report_pracuj[position]['min_salary']
        max_salary = technology_report_pracuj[position]['max_salary']
        if min_salary is None or (technology_report_justjoin[position]['min_salary'] is not None and technology_report_justjoin[position]['min_salary'] < min_salary):
            min_salary = technology_report_justjoin[position]['min_salary']
        if max_salary is None or (technology_report_justjoin[position]['max_salary'] is not None and technology_report_justjoin[position]['max_salary'] > max_salary):
            max_salary = technology_report_justjoin[position]['max_salary']

        # Obliczanie średniego wynagrodzenia
        if max_salary is None:
            max_salary = min_salary
        merged_technology_report[position] = {
            'count': technology_report_pracuj[position]['count'] + technology_report_justjoin[position]['count'],
            'min_salary': min_salary,
            'max_salary': max_salary,
            'average_salary': min_salary if max_salary is None else (max_salary + min_salary) / 2
        }

# Zapisanie złączonego raportu
output_file_path = '/content/drive/My Drive/merged_technology_report_with_positions.json'
with open(output_file_path, 'w') as file:
    json.dump(merged_technology_report, file)

print("Merged technology report saved to:", output_file_path)